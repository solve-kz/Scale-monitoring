@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Http


<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="/" />

    <!-- Ваши стили -->
    
    <link rel="stylesheet" href="Scalemon.WebApp.styles.css" />
    <link rel="icon" type="image/png" href="favicon.png" />

    <!-- ЕДИНСТВЕННЫЙ «загрузчик» темы -->
    <RadzenTheme Theme="material" @rendermode="InteractiveServer" />
	<link rel="stylesheet" href="app.css" />
    <HeadOutlet />
</head>

<body>
    <CascadingAuthenticationState>
        <Routes @rendermode="InteractiveServer" />
    </CascadingAuthenticationState>

    <script src="auth.js"></script>
    <script src="App.js"></script>
    <script src="_framework/blazor.web.js"></script>
    <script src="_content/Radzen.Blazor/Radzen.Blazor.js?v=@(typeof(Radzen.Colors).Assembly.GetName().Version)"></script>
</body>

@code {
        [CascadingParameter]
            private HttpContext HttpContext { get; set; } = default!;

        [Inject]
        private ThemeService ThemeService { get; set; } = default!;

        protected override void OnInitialized()
        {
                base.OnInitialized();

                if (HttpContext != null)
                {
                        var theme = HttpContext.Request.Cookies["MyApplicationTheme"];

                        if (!string.IsNullOrEmpty(theme))
                        {
                                ThemeService.SetTheme(theme, false);
                        }
                }
        }
}
</html>
